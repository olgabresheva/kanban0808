{"version":3,"sources":["TaskCreateForm.js","Task.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["TaskCreateForm","props","useState","newTask","setNewTask","priority","setPriority","addBtnDisabled","setAddBtnDisabled","formOpen","setFormOpen","className","type","onClick","placeholder","value","onChange","e","target","required","disabled","preventDefault","onTaskCreate","deleteBtn","width","height","viewBox","fill","xmlns","d","fillRule","leftBtn","rightBtn","downBtn","upBtn","editBtn","saveBtn","Task","editMode","setEditMode","task","title","taskNewInput","setTaskNewInput","onTaskMoveByPriority","id","1","2","3","onTaskSave","onTaskDelete","status","onTaskMove","Board","tasks","filter","el","sort","a","b","map","key","initial","uuidv4","App","setTasks","updatedTasks","direction","indexOf","newTitle","updatesTasks","push","index","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d4e3ae49.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nfunction TaskCreateForm(props) {\n\n    const [newTask, setNewTask] = useState('');\n    const [priority, setPriority] = useState('Select Priority');\n    const [addBtnDisabled, setAddBtnDisabled] = useState(true);\n    const [formOpen, setFormOpen] = useState(false);\n\n\n    const taskPriorityInput = (e) => {\n        setPriority(e.target.value);\n        if (priority !== '0') {\n            setAddBtnDisabled(false)\n        } else setAddBtnDisabled(true);\n    }\n\n\n    const taskCreate = (e) => {\n        e.preventDefault();\n        props.onTaskCreate(newTask, priority);\n        setFormOpen(false);\n        setNewTask('');\n        setAddBtnDisabled(true)\n    }\n\n    return (\n        <div className=\"TaskCreateForm\">\n\n            <button type=\"submit\" className=\"btn btn-info\" onClick={() => setFormOpen(true)}>Create New Task</button>\n            <p/>\n\n            {formOpen &&\n            <form>\n                <div className=\"form-group\">\n                    <input type=\"text\" className=\"form-control\" placeholder={'Enter Your Task'} value={newTask}\n                           onChange={e => setNewTask(e.target.value)}/>\n                </div>\n                {/*<label htmlFor=\"validationDefault04\">Priority</label>*/}\n                <select className=\"custom-select\" onChange={taskPriorityInput} required>\n                    <option value=\"0\">Select Priority</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                </select>\n                <p/>\n                <button disabled={addBtnDisabled} type=\"submit\" className=\"btn btn-info\" onClick={taskCreate}>Add Task\n                </button>\n            </form>\n            }\n\n\n        </div>\n    );\n}\n\nexport default TaskCreateForm;\n","import React, {useState} from 'react';\nimport './App.css';\n\nconst deleteBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-trash\" fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n        d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n    <path fillRule=\"evenodd\"\n          d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n</svg>);\n\nconst leftBtn = (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-arrow-left-circle\" fill=\"currentColor\"\n         xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n        <path fillRule=\"evenodd\"\n              d=\"M8.354 11.354a.5.5 0 0 0 0-.708L5.707 8l2.647-2.646a.5.5 0 1 0-.708-.708l-3 3a.5.5 0 0 0 0 .708l3 3a.5.5 0 0 0 .708 0z\"/>\n        <path fillRule=\"evenodd\" d=\"M11.5 8a.5.5 0 0 0-.5-.5H6a.5.5 0 0 0 0 1h5a.5.5 0 0 0 .5-.5z\"/>\n    </svg>);\n\nconst rightBtn = (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-arrow-right-circle\" fill=\"currentColor\"\n         xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n        <path fillRule=\"evenodd\"\n              d=\"M7.646 11.354a.5.5 0 0 1 0-.708L10.293 8 7.646 5.354a.5.5 0 1 1 .708-.708l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0z\"/>\n        <path fillRule=\"evenodd\" d=\"M4.5 8a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5z\"/>\n    </svg>);\n\n\nconst downBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-chevron-down\" fill=\"currentColor\"\n                      xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\"\n          d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"/>\n</svg>);\n\nconst upBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-chevron-up\" fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\"\n          d=\"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z\"/>\n</svg>);\n\n\nconst editBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-pencil\" fill=\"currentColor\"\n                      xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\"\n          d=\"M11.293 1.293a1 1 0 0 1 1.414 0l2 2a1 1 0 0 1 0 1.414l-9 9a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z\"/>\n    <path fillRule=\"evenodd\"\n          d=\"M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 0 0 .5.5H4v.5a.5.5 0 0 0 .5.5H5v.5a.5.5 0 0 0 .5.5H6v-1.5a.5.5 0 0 0-.5-.5H5v-.5a.5.5 0 0 0-.5-.5H3z\"/>\n</svg>);\n\nconst saveBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-check2-all\" fill=\"currentColor\"\n                      xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\"\n          d=\"M12.354 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z\"/>\n    <path\n        d=\"M6.25 8.043l-.896-.897a.5.5 0 1 0-.708.708l.897.896.707-.707zm1 2.414l.896.897a.5.5 0 0 0 .708 0l7-7a.5.5 0 0 0-.708-.708L8.5 10.293l-.543-.543-.707.707z\"/>\n</svg>);\n\nfunction Task(props) {\n\n    const [editMode, setEditMode] = useState(false);\n    const [taskNewInput, setTaskNewInput] = useState(props.task.title);\n\n    const onTaskSave = () => {\n        props.onTaskSave(props.task.id, taskNewInput);\n        setEditMode(false);\n    }\n\n    const priorityBadge = {\n        1: \"badge badge-danger\",\n        2: \"badge badge-warning\",\n        3: \"badge badge-success\"\n    };\n\n    return (\n\n        <div className=\"card\">\n\n            <div className=\"card-header\">\n                <span className=\"priority\">\n                {props.task.priority !== 3 &&\n                <span onClick={() => props.onTaskMoveByPriority(props.task.id, \"down\")}>{downBtn}</span>}\n                    {props.task.priority !== 1 &&\n                    <span onClick={() => props.onTaskMoveByPriority(props.task.id, \"up\")}>{upBtn}</span>}\n                </span>\n                <span className={priorityBadge[props.task.priority]}>Priority: {props.task.priority}</span>\n            </div>\n\n            <div className=\"card-body\">\n\n                {editMode\n                    ? <>\n                        <input type=\"text\" value={taskNewInput} onChange={e => setTaskNewInput(e.target.value)}/><br/>\n                        <button type=\"button\" className=\"btn btn-outline-info btn-sm\"\n                                onClick={onTaskSave}>{saveBtn}</button>\n                    </>\n                    : <h6 className=\"card-title\">{props.task.title}</h6>\n                }\n\n            </div>\n            <div className=\"card-footer bg-transparent text-muted border-0\">\n                <span className=\"float-left\">\n\n                <span onClick={() => setEditMode(true)}>{editBtn}</span>\n                <span onClick={() => props.onTaskDelete(props.task.id)}>{deleteBtn}</span>\n                    </span>\n                <span className=\"float-right\">\n                {props.task.status !== 'To Do' &&\n                <span onClick={() => props.onTaskMove(props.task.id, \"left\")}>{leftBtn}</span>}\n                    {props.task.status !== 'Done' &&\n                    <span onClick={() => props.onTaskMove(props.task.id, \"right\")}>{rightBtn}</span>}\n                </span>\n\n            </div>\n        </div>\n\n    );\n}\n\nexport default Task;\n","import React from 'react';\nimport './App.css';\nimport Task from \"./Task\";\n\n\nfunction Board(props) {\n    return (\n        <span className=\"col-sm\">\n             <div className=\"card-header\">\n            {props.status}\n             </div>\n            <p/>\n            {props.tasks.filter(el => el.status === props.status).sort(function (a, b) {\n                return a.priority - b.priority\n            }).map(el =>\n                <li key={el.id}>\n                    <Task task={el}\n                          onTaskDelete={props.onTaskDelete}\n                          onTaskMove={props.onTaskMove}\n                          onTaskMoveByPriority={props.onTaskMoveByPriority}\n                          onTaskSave={props.onTaskSave}/>\n                </li>)}\n        </span>\n    );\n}\n\nexport default Board;\n","import React, {useState} from 'react';\nimport './App.css';\nimport TaskCreateForm from \"./TaskCreateForm\";\nimport Board from \"./Board\";\nimport {v4 as uuidv4} from 'uuid';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nconst initial = [\n    {id: uuidv4(), title: 'Task-1', priority: 2, status: 'To Do'},\n    {id: uuidv4(), title: 'Task-2', priority: 3, status: 'Review'},\n    {id: uuidv4(), title: 'Task-3', priority: 1, status: 'In Progress'},\n]\n\nfunction App() {\n\n    const [tasks, setTasks] = useState(initial);\n    const status = ['To Do', 'In Progress', 'Review', 'Done']\n\n    const onTaskCreate = (newTask, priority) => {\n        const updatedTasks = [...tasks];\n        updatedTasks.push({id: uuidv4(), title: newTask, priority: priority, status: 'To Do'});\n        setTasks(updatedTasks);\n    }\n\n    const onTaskDelete = (id) => {\n        const updatedTasks = tasks.filter(el => el.id !== id)\n        setTasks(updatedTasks);\n    }\n\n    const onTaskMove = (id, direction) => {\n        const updatedTasks = tasks.map(el => {\n            if (el.id === id) {\n                if (direction === 'left') {\n                    return ({...el, status: status[status.indexOf(el.status) - 1]})\n                }\n                if (direction === 'right') {\n                    return ({...el, status: status[status.indexOf(el.status) + 1]})\n                }\n            } else return el;\n        })\n        setTasks(updatedTasks);\n    }\n\n    const onTaskMoveByPriority = (id, direction) => {\n        const updatedTasks = tasks.map(el => {\n            if (el.id === id) {\n                if (direction === 'down') {\n                    return ({...el, priority: el.priority + 1})\n                }\n                if (direction === 'up') {\n                    return ({...el, priority: el.priority - 1})\n                }\n            } else return el;\n        })\n        setTasks(updatedTasks);\n    }\n\n    const onTaskSave = (id, newTitle) => {\n        const updatesTasks = tasks.map(el => {\n            if (el.id === id) {\n                return ({...el, title: newTitle})\n            } else return el;\n        })\n        setTasks(updatesTasks);\n    }\n\n    return (\n        <div className=\"App\">\n\n            <div className=\"container\">\n\n                <h2>Kanban Board</h2>\n                <TaskCreateForm onTaskCreate={onTaskCreate}/>\n\n                <hr/>\n                <div className=\"row\">\n                    {status.map((el, index) => <Board\n                        key={index}\n                        status={el}\n                        tasks={tasks}\n                        onTaskDelete={onTaskDelete}\n                        onTaskMove={onTaskMove}\n                        onTaskMoveByPriority={onTaskMoveByPriority}\n                        onTaskSave={onTaskSave}/>)}\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}